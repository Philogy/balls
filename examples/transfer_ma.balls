// EXTERNAL
extern _REQUIRE_NOT() stack(1, 0) reads(CONTROL_FLOW)

// Define actual code
fn TRANSFER(z0) [error] -> [] {
    // Define some variables
    to = calldataload(0x04)
    amount = calldataload(0x24)

    // Get from balance.
    from_bal = sload(caller())

    // Check from balance and error.
    insufficient_bal = gt(amount, from_bal)
    error' = or(insufficient_bal, error)
    _REQUIRE_NOT(error')

    // Update from balance.
    new_from_bal = sub(from_bal, amount)
    sstore(caller(), new_from_bal)

    // Update to balance.
    to_bal = sload(to)
    new_to_bal = add(to_bal, amount)
    sstore(to, new_to_bal)

    // Return success (1).
    mstore(z0, 1)
    return(z0, msize())
}

fn BALANCE_OF(z0) [error] -> [] {
    _REQUIRE_NOT(error)
    owner = calldataload(0x04)
    bal = sload(owner)
    mstore(z0, bal)
    return(z0, msize())
}
