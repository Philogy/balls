// Single line comment.

// Define dependency types
#define dependency STORAGE
#define dependency MEMORY
#define dependency STOP

// Constants
#define op calldataload = stack(1, 1)
#define op caller = stack(0, 1)

// Pure ops
#define op add = stack(2, 1)
#define op sub = stack(2, 1)
#define op gt = stack(2, 1)
#define op or = stack(2, 1)

// Memory ops
#define op mstore = stack(2, 0) writes(MEMORY)
#define op sha3 = stack(2, 1) reads(MEMORY)

// Storage
#define op sload = stack(1, 1) reads(STOP) writes(STORAGE)
#define op sstore = stack(2, 0) reads(STOP) writes(STORAGE)

// Termination
#define op return = stack(2, 0) reads(MEMORY) writes(STOP)
#define op assertFalse = stack(1, 0) reads(STOP)

#define macro BALANCE = [slot, clean_addr] -> {
    mstore(0x00, slot)
    mstore(0x20, clean_addr)
    bal_slot = sha3(0x00, 0x40)
    balance = sload(bal_slot)
} -> [balance]
